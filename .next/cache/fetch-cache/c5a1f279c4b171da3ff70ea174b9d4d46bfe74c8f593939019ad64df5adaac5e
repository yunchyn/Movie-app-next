{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","alt-svc":"h3=\":443\"; ma=86400","cf-ray":"89a5c82f1f5b0514-HKG","connection":"keep-alive","content-encoding":"br","content-type":"application/json; charset=UTF-8","date":"Thu, 27 Jun 2024 13:28:44 GMT","nel":"{\"success_fraction\":0,\"report_to\":\"cf-nel\",\"max_age\":604800}","report-to":"{\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v4?s=dZ8p0f%2BBXVyCSi9f%2BGjoyTmZYUqD9n1qXecrT1rPtAU4VGL5qTwcpA4PV08vqLOf31v03lL%2BQtf4y0qdOealEiA2BnVjbQ%2Fw22c94x3DB9TGNOJ%2B5bo3W%2BpRiSI5uF563hIdXSviUjy6rjXPNkNcR2bWM2L%2BJZo%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding"},"body":"","status":200,"url":"https://nomad-movies.nomadcoders.workers.dev/movies/653346/similar"},"revalidate":31536000,"tags":[]}